{"version":3,"sources":["../../../../src/components/Table/index.tsx"],"names":["Table","columns","rows","console","log","s","table","thead","map","id","headerName","th","row","Object","values","key","tr","entries","td","idx","field","value","filter","col","currentColumn","tdRowName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAaO,IAAMA,KAA2B,GAAG,SAA9BA,KAA8B,OAAuB;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AAEA,sBACE;AAAO,IAAA,SAAS,EAAEG,qBAAEC;AAApB,kBACE;AAAO,IAAA,SAAS,EAAED,qBAAEE;AAApB,kBACE,yCACGN,OAAO,CAACO,GAAR,CAAY;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,UAAP,SAAOA,UAAP;AAAA,wBACX;AAAI,MAAA,GAAG,EAAED,EAAT;AAAa,MAAA,SAAS,EAAEJ,qBAAEM;AAA1B,OACGD,UADH,CADW;AAAA,GAAZ,CADH,CADF,CADF,eAUE,4CACGR,IAAI,CAACM,GAAL,CAAS,UAACI,GAAD,EAAS;AAAA,yBACHC,MAAM,CAACC,MAAP,CAAcF,GAAd,CADG;AAAA;AAAA,QACVG,GADU;;AAGjB,wBACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAc,MAAA,SAAS,EAAEV,qBAAEW;AAA3B,OACGH,MAAM,CAACI,OAAP,CAAeL,GAAf,EAAoBJ,GAApB,CAAwB,UAACU,EAAD,EAAKC,GAAL,EAAa;AAAA,+BACbD,EADa;AAAA,UAC7BE,KAD6B;AAAA,UACtBC,KADsB;;AAAA,4BAEZpB,OAAO,CAACqB,MAAR,CACtB,UAACC,GAAD;AAAA,eAASA,GAAG,CAACH,KAAJ,KAAcA,KAAvB;AAAA,OADsB,CAFY;AAAA;AAAA,UAE7BI,aAF6B;;AAMpC,UAAIJ,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,0BACE;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EAAE,yBAAWf,qBAAEa,EAAb,EAAiBC,GAAG,KAAK,CAAR,IAAad,qBAAEoB,SAAhC;AAFb,sBAIE,2CAAOD,aAAa,CAACd,UAArB,CAJF,EAKGW,KALH,CADF;AASD,KAnBA,CADH,CADF;AAwBD,GA3BA,CADH,CAVF,CADF;AA2CD,CA9CM;;;;AAJLpB,EAAAA,O;AANAQ,IAAAA,E;AACAW,IAAAA,K;AACAV,IAAAA,U;;AAKAR,EAAAA,I","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nimport s from \"./Table.module.css\";\n\ntype HeadCellType = {\n  id: number;\n  field: string;\n  headerName: string;\n};\n\ntype TableProps = {\n  columns: HeadCellType[];\n  rows: object[];\n};\n\nexport const Table: React.FC<TableProps> = ({ columns, rows }) => {\n  console.log(\"###: rows\", rows);\n\n  return (\n    <table className={s.table}>\n      <thead className={s.thead}>\n        <tr>\n          {columns.map(({ id, headerName }) => (\n            <th key={id} className={s.th}>\n              {headerName}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row) => {\n          const [key] = Object.values(row);\n\n          return (\n            <tr key={key} className={s.tr}>\n              {Object.entries(row).map((td, idx) => {\n                const [field, value] = td;\n                const [currentColumn] = columns.filter(\n                  (col) => col.field === field\n                );\n\n                if (field === \"id\") {\n                  return null;\n                }\n\n                return (\n                  <td\n                    key={field}\n                    className={classNames(s.td, idx === 1 && s.tdRowName)}\n                  >\n                    <span>{currentColumn.headerName}</span>\n                    {value}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n"],"file":"index.js"}